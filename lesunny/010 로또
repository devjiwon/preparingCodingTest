package programmers;

import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;

public class Main{
	public static boolean permutation(int[] perm, int number) {
		int max = -1;
        for(int i=1; i< number; i++) {
        	if(perm[i-1] < perm[i]) max = i;
        }
        	
        if(max==-1) {
        	return false;
        }
        	
        int max2 = -1;
        for(int j=max ; j<number; j++) {
        	if(perm[max-1] < perm[j]) max2 = j;
        }
        	
        //swap i-1 <-> j
        int temp = perm[max-1];
        perm[max-1] = perm[max2];
        perm[max2] = temp;
        	
        ArrayList<Integer> tempArr = new ArrayList<>();
        for(int i=max ; i<number; i++) {
        	tempArr.add(perm[i]);
        }
        	
        Collections.reverse(tempArr);
        	
        for(int i=max; i<number; i++) {
        	perm[i] = tempArr.get(i-max);
        }
        return true;
	}
	public static void main(String[] args){
    	
    	Scanner in = new Scanner(System.in);
    	boolean flag = false;
    	String str = "";
    	while(true) {
    		int k = in.nextInt();
    		if(k==0) break;
    		int[] lotto = new int[k];
    		
    		for(int i=0;i<k;i++) {
    			lotto[i] = in.nextInt();
    		}
    		
    		if(flag)
    			str+="\n";
    		
    		int[] flagArr = new int[k];
    		
    		for(int i=0; i<k; i++) {
    			if(i<6) flagArr[i] = 0;
    			else flagArr[i] = 1;
    		}
    		
    		do {
    			for(int i=0; i<k; i++) {
    				if(flagArr[i]==0 && i!=k-1)
    					str+=lotto[i]+" ";
    				else if(flagArr[i]==0 && i==k-1)
    					str+=lotto[i];
    			}
				str+="\n";
    			flag = true;
    		}while(permutation(flagArr, k));  		
    	}
    	System.out.println(str);
    	        
    }
}
