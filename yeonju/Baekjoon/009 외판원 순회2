#include <iostream>
#include <vector>
#include<algorithm>

using namespace std;

int n;//도시의개수
int w[11][11];
bool visit[11];
vector<int> costs;
int start;

void DFS(int node,int cost,int cnt){
    if(cnt==n){//모든 도시 방문
        if(w[node][start]>0){
            costs.push_back(cost+w[node][start]);
            return;    
        }

    }    
    for(int i=0;i<n;i++){
        if(w[node][i] >0 && visit[i]==false){
            visit[i]=true;
            DFS(i,cost+w[node][i],cnt+1);
            visit[i]=false;
        }
    }
}

int main()
{


    cin>>n;

    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            cin>>w[i][j];
        }
    }

    for(int i=0;i<n;i++){
        start=i;
        visit[i]=true;
        DFS(i,0,1);
        visit[i]=false;
    }

    cout<<* min_element(costs.begin(),costs.end());
    return 0;
}
